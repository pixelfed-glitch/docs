import{_ as e,c as s,o as i,V as a}from"./chunks/framework.wUJtDaaB.js";const g=JSON.parse('{"title":"Prerequisites","description":"","frontmatter":{"0":"t","1":"i","2":"t","3":"l","4":"e","5":" ","6":"=","7":" ","8":"\\"","9":"P","10":"r","11":"e","12":"p","13":"a","14":"r","15":"i","16":"n","17":"g","18":" ","19":"y","20":"o","21":"u","22":"r","23":" ","24":"m","25":"a","26":"c","27":"h","28":"i","29":"n","30":"e","31":"\\"","32":" ","33":"s","34":"u","35":"m","36":"m","37":"a","38":"r","39":"y","40":" ","41":"=","42":" ","43":"\\"","44":"D","45":"o","46":"w","47":"n","48":"l","49":"o","50":"a","51":"d","52":",","53":" ","54":"i","55":"n","56":"s","57":"t","58":"a","59":"l","60":"l","61":",","62":" ","63":"a","64":"n","65":"d","66":" ","67":"c","68":"o","69":"n","70":"f","71":"i","72":"g","73":"u","74":"r","75":"e","76":" ","77":"s","78":"o","79":"m","80":"e","81":" ","82":"p","83":"r","84":"e","85":"-","86":"r","87":"e","88":"q","89":"u","90":"i","91":"s","92":"i","93":"t","94":"e","95":"s","96":".","97":"\\"","98":" ","99":"w","100":"e","101":"i","102":"g","103":"h","104":"t","105":" ","106":"=","107":" ","108":"1","109":"0","110":" ","111":"[","112":"m","113":"e","114":"n","115":"u","116":"]","117":" ","118":"[","119":"m","120":"e","121":"n","122":"u","123":".","124":"d","125":"o","126":"c","127":"s","128":"]","129":" ","130":"i","131":"d","132":"e","133":"n","134":"t","135":"i","136":"f","137":"i","138":"e","139":"r","140":" ","141":"=","142":" ","143":"\\"","144":"a","145":"d","146":"m","147":"i","148":"n","149":"/","150":"p","151":"r","152":"e","153":"r","154":"e","155":"q","156":"u","157":"i","158":"s","159":"i","160":"t","161":"e","162":"s","163":"\\"","164":" ","165":"p","166":"a","167":"r","168":"e","169":"n","170":"t","171":" ","172":"=","173":" ","174":"\\"","175":"a","176":"d","177":"m","178":"i","179":"n","180":"\\""},"headers":[],"relativePath":"running-pixelfed/generic/prerequisites.md","filePath":"running-pixelfed/generic/prerequisites.md"}'),t={name:"running-pixelfed/generic/prerequisites.md"},n=a(`<h1 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h1><p>Before you install Pixelfed, you will need to setup a webserver with the required dependencies:</p><ul><li>A PHP-FPM server</li><li>An SQL database server</li><li>An HTTPS server</li><li><a href="https://getcomposer.org/" target="_blank" rel="noreferrer">Composer</a>, for PHP dependency management</li><li><a href="https://git-scm.com/" target="_blank" rel="noreferrer">Git</a>, for fetching updates</li><li><a href="https://redis.io/" target="_blank" rel="noreferrer">Redis</a>, for in-memory caching and background task queueing</li><li><a href="https://libgd.github.io/" target="_blank" rel="noreferrer">GD</a>, for image processing</li><li><a href="https://github.com/tjko/jpegoptim" target="_blank" rel="noreferrer">JPEGOptim</a>, for optimizing JPG</li><li><a href="http://optipng.sourceforge.net/" target="_blank" rel="noreferrer">OptiPNG</a>, for lossless PNG</li><li><a href="https://pngquant.org/" target="_blank" rel="noreferrer">PNGQuant</a>, for lossy PNG</li><li><a href="https://ffmpeg.org/" target="_blank" rel="noreferrer">ffmpeg</a>, for generating video thumbnails</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>Shared Hosting</strong></p><p>At this stage, it&#39;s not possible to install Pixelfed by downloading a ZIP file and uploading the files to your web server. This is because Composer needs to run on the command line.</p><p>This doesn&#39;t necessarily mean you need a VPS. Some shared hosts give you SSH access, through which you should be able to install Composer and Pixelfed just fine.</p></div><h2 id="php-fpm" tabindex="-1">PHP-FPM <a class="header-anchor" href="#php-fpm" aria-label="Permalink to &quot;PHP-FPM&quot;">​</a></h2><p>You can check your currently installed version of PHP-FPM by running <code>php-fpm -v</code>. Make sure you are running <strong>PHP &gt;= 8.1</strong>.</p><p>You can check your currently loaded extensions by running <code>php-fpm -m</code>. Modules are usually enabled by editing your PHP configuration file and uncommenting the appropriate lines under the &quot;Dynamic extensions&quot; section. Make sure the following extensions are installed and loaded:</p><ul><li><code>bcmath</code></li><li><code>ctype</code></li><li><code>curl</code></li><li><code>exif</code></li><li><code>gd</code></li><li><code>iconv</code></li><li><code>intl</code></li><li><code>json</code></li><li><code>mbstring</code></li><li><code>openssl</code></li><li><code>redis</code></li><li><code>tokenizer</code></li><li><code>xml</code></li><li><code>zip</code></li></ul><p>Additionally, you will need to enable extensions for database drivers:</p><ul><li>For MySQL or MariaDB: enable <code>pdo_mysql</code> and <code>mysqli</code></li><li>For PostgreSQL: enable <code>pdo_pgsql</code> and <code>pgsql</code></li></ul><p>Finally, make sure to set the desired upload limits for your PHP processes. You will want to check the following:</p><ul><li><code>post_max_size</code> (default 8M, set this around or slightly greater than your desired post size limit)</li><li><code>file_uploads</code> (default On, which it needs to be)</li><li><code>upload_max_filesize</code> (default 2M, set this &lt;= <code>post_max_size</code>)</li><li><code>max_file_uploads</code> (default 20, but make sure it is &gt;= your desired attachment limit)</li><li><code>max_execution_time</code> (default 30, consider raising this to 600 or more so that longer tasks aren&#39;t interrupted)</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>Instagram imports</strong></p><p>Instagram imports are also affected by these settings. If you enable imports, you will want to raise <code>post_max_size</code> to the maximum size you expect an Instagram archive to be, <code>upload_max_filesize</code> to the maximum size you expect individual Instagram photos to be, and <code>max_file_uploads</code> to the maximum number of photos (not posts) you&#39;d expect an Instagram archive to contain.</p></div><h2 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-label="Permalink to &quot;Database&quot;">​</a></h2><p>You can choose one of three <a href="https://laravel.com/docs/9.x/database#introduction" target="_blank" rel="noreferrer">supported database drivers for Laravel 9</a>, the framework used by Pixelfed:</p><ul><li>MySQL (5.7+)</li><li>MariaDB (10.3+)</li><li>PostgreSQL (10+)</li></ul><p>You will need to create a database and grant permission to an SQL user identified by a password. To do this with MySQL or MariaDB, do the following:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span></span></code></pre></div><p>You can then create a database and grant privileges to your SQL user. The following SQL commands will create a database named <code>pixelfed</code> and allow it to be managed by a user <code>pixelfed</code> with password <code>strong_password</code>:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pixelfed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">grant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all privileges </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pixelfed.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pixelfed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> identified </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;strong_password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flush privileges;</span></span></code></pre></div><p>To do this with PostgreSQL instead, do the following:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgres</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> psql</span></span></code></pre></div><p>Once in the psql shell, do the following:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> USER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pixelfed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CREATEDB;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\q</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>Changing database drivers</strong></p><p>If you decide to change database drivers later, please run a backup first! You can do this with <code>php artisan backup:run --only-db</code></p></div><h2 id="http-web-server" tabindex="-1">HTTP Web server <a class="header-anchor" href="#http-web-server" aria-label="Permalink to &quot;HTTP Web server&quot;">​</a></h2><p>The following web servers are officially supported:</p><ul><li>Apache (with <code>mod_rewrite</code> enabled)</li><li>nginx</li></ul><p>Pixelfed uses HTTPS URIs, so you will need to have HTTPS set up at the perimeter of your network before you proxy requests internally.</p><h2 id="creating-a-dedicated-app-user-and-using-unix-sockets-optional" tabindex="-1">Creating a dedicated app-user and using UNIX sockets (optional) <a class="header-anchor" href="#creating-a-dedicated-app-user-and-using-unix-sockets-optional" aria-label="Permalink to &quot;Creating a dedicated app-user and using UNIX sockets (optional)&quot;">​</a></h2><p>For added security, you may want to create a dedicated user specifically for running Pixelfed. To do this:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useradd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rU</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pixelfed</span></span></code></pre></div><h3 id="configuring-php-fpm-pool-and-socket" tabindex="-1">Configuring PHP-FPM pool and socket <a class="header-anchor" href="#configuring-php-fpm-pool-and-socket" aria-label="Permalink to &quot;Configuring PHP-FPM pool and socket&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/php/php-fpm.d/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> www.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pixelfed.conf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$EDITOR pixelfed.conf</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>Where to define custom PHP-FPM pools</strong></p><p>The exact directory you should <code>cd</code> to will vary according to your distribution:</p><ul><li>Arch Linux uses <code>/etc/php/php-fpm.d</code></li><li>Debian and Ubuntu use <code>/etc/php/8.1/fpm/pool.d/</code> (dependent on PHP version)</li><li>For other distributions, check your php-fpm.conf to see where exactly you can define <code>*.conf</code> with <code>include=</code></li></ul></div><p>Make the following changes to the PHP-FPM pool:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; use the username of the app-user as the pool name, e.g. pixelfed</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[pixelfed]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = pixelfed</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = pixelfed</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; to use a tcp socket, e.g. if running php-fpm on a different machine than your app:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;    (note that the port 9001 is used, since php-fpm defaults to running on port 9000;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;    (however, the port can be whatever you want)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; listen = 127.0.0.1:9001;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;    but it&#39;s better to use a socket if you&#39;re running locally on the same machine:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">listen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /run/php-fpm/pixelfed.sock</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">listen.owner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = http</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">listen.group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = http</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">listen.mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0660</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; [...]</span></span></code></pre></div><h3 id="configuring-redis-socket" tabindex="-1">Configuring Redis socket <a class="header-anchor" href="#configuring-redis-socket" aria-label="Permalink to &quot;Configuring Redis socket&quot;">​</a></h3><p>Edit <code>redis.conf</code> and edit the following lines:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>port 6379                           # change this to &quot;port 0&quot; to disable network packets</span></span>
<span class="line"><span>unixsocket /run/redis/redis.sock    # </span></span>
<span class="line"><span>unixsocketperm 770                  # give permission to &quot;redis&quot; user and group</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>Where to find redis.conf</strong></p><p>The exact location will vary according to your distribution:</p><ul><li>Arch Linux uses <code>/etc/redis.conf</code></li><li>Debian and Ubuntu use <code>/etc/redis/redis.conf</code></li><li>For other distributions, check your documentation</li></ul></div>`,41),l=[n];function o(p,r,d,h,c,u){return i(),s("div",null,l)}const f=e(t,[["render",o]]);export{g as __pageData,f as default};
