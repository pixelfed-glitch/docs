import{_ as e,c as i,o as a,V as t}from"./chunks/framework.wUJtDaaB.js";const f=JSON.parse('{"title":"Pixelfed + Docker installtion","description":"","frontmatter":{},"headers":[],"relativePath":"running-pixelfed/docker/installation.md","filePath":"running-pixelfed/docker/installation.md"}'),o={name:"running-pixelfed/docker/installation.md"},s=t('<h1 id="pixelfed-docker-installtion" tabindex="-1">Pixelfed + Docker installtion <a class="header-anchor" href="#pixelfed-docker-installtion" aria-label="Permalink to &quot;Pixelfed + Docker installtion&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">If anything is confusing, unclear, missing, or maybe even wrong on this page, then <em>please</em> let us know <a href="https://github.com/pixelfed-glitch/pixelfed/issues/new" target="_blank" rel="noreferrer">by submitting a bug report</a> ❤️</p></div><p>Connect via SSH to your server and decide where you want to install Pixelfed.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>In this guide, I will assume you will install Pixelfed in <code>/data/pixelfed</code> and that the <a href="./prerequisites.html">Docker Prerequisites</a> are met.</p><p>You can change the installation path; update the commands below to fit your setup.</p></div><h2 id="initial-set-up" tabindex="-1">Initial set up <a class="header-anchor" href="#initial-set-up" aria-label="Permalink to &quot;Initial set up&quot;">​</a></h2><h3 id="create-the-directory" tabindex="-1">Create the directory <a class="header-anchor" href="#create-the-directory" aria-label="Permalink to &quot;Create the directory&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data</span></span></code></pre></div><h3 id="clone-the-pixelfed-project" tabindex="-1">Clone the Pixelfed project <a class="header-anchor" href="#clone-the-pixelfed-project" aria-label="Permalink to &quot;Clone the Pixelfed project&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/pixelfed-glitch/pixelfed.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/pixelfed</span></span></code></pre></div><h3 id="change-directory" tabindex="-1">Change directory <a class="header-anchor" href="#change-directory" aria-label="Permalink to &quot;Change directory&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/pixelfed</span></span></code></pre></div><h2 id="configuring-your-site" tabindex="-1">Configuring your site <a class="header-anchor" href="#configuring-your-site" aria-label="Permalink to &quot;Configuring your site&quot;">​</a></h2><h3 id="copy-the-example-file" tabindex="-1">Copy the example file <a class="header-anchor" href="#copy-the-example-file" aria-label="Permalink to &quot;Copy the example file&quot;">​</a></h3><p>Pixelfed contains a default configuration file (<code>.env.docker</code>) you should use as a starter; however, before editing anything, make a copy of it and put it in the <em>right</em> place (<code>.env</code>).</p><p>Run the following command to copy the file:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div><h3 id="modify-config-file" tabindex="-1">Modify config file <a class="header-anchor" href="#modify-config-file" aria-label="Permalink to &quot;Modify config file&quot;">​</a></h3><p>The configuration file is <em>quite</em> long, but the good news is that you can ignore <em>most</em> of it; most of the <em>server-specific</em> settings are configured for you out of the box.</p><p>The minimum required settings you <strong>must</strong> change is:</p><ul><li>(required) <code>APP_DOMAIN</code>, which is the hostname you plan to run your Pixelfed server on (e.g., <code>pixelfed.social</code>) - must <strong>not</strong> include <code>http://</code> or a trailing slash (<code>/</code>)!</li><li>(required) <code>DB_PASSWORD</code>, which is the database password; you can use a service like <a href="https://pwgen.io/en/" target="_blank" rel="noreferrer">pwgen.io</a> to generate a secure one.</li><li>(optional) <code>ENFORCE_EMAIL_VERIFICATION</code> should be set to <code>&quot;false&quot;</code> if you don&#39;t plan to send e-mails.</li><li>(optional) <code>MAIL_DRIVER</code> and related <code>MAIL_*</code> settings if you plan to use an <a href="./prerequisites.html#smtp-provider-optional">E-mail/SMTP provider</a> - See <a href="./installation.html#email-variables">E-mail variables documentation</a>.</li><li>(optional) <code>PF_ENABLE_CLOUD</code> / <code>FILESYSTEM_CLOUD</code> if you plan to use an <a href="./prerequisites.html#object-storage-optional">Object Storage provider</a>.</li></ul><p>See the <a href="https://docs.pixelfed.org/running-pixelfed/installation/#app-variables" target="_blank" rel="noreferrer"><code>Configure environment variables</code></a> documentation for details!</p><p>You need to mainly focus on the following sections.</p><ul><li><a href="./installation.html#app-variables">App variables</a></li><li><a href="./installation.html#email-variables">Email variables</a></li></ul><p>You can skip the following sections since they are already configured/automated for you:</p><ul><li><code>Redis</code></li><li><code>Database</code> (except for <code>DB_PASSWORD</code>)</li><li><code>One-time setup tasks</code></li></ul><h3 id="starting-the-service" tabindex="-1">Starting the service <a class="header-anchor" href="#starting-the-service" aria-label="Permalink to &quot;Starting the service&quot;">​</a></h3><p>With everything in place and (hopefully) well-configured, we can now go ahead and start our services by running:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>This will download all the required Docker images, start the containers, and begin the automatic setup.</p><p>You can follow the logs by running <code>docker compose logs</code> - you might want to scroll to the top to logs from the start.</p><p>You can use the CLI flag <code>--tail=100</code> to only see each container&#39;s most recent (<code>100</code> in this example) log lines.</p><p>You can use the CLI flag <code>--follow</code> to continue to see log output from the containers.</p><p>You can combine <code>--tail=100</code> and <code>--follow</code> like this <code>docker compose logs --tail=100 --follow</code>.</p><p>If you only care about specific containers, you can add them to the end of the command like this <code>docker-compose logs web worker proxy.</code></p><h3 id="done" tabindex="-1">Done <a class="header-anchor" href="#done" aria-label="Permalink to &quot;Done&quot;">​</a></h3><p>You made it to the end of the installation tutorial and <em>hopefully</em> you have fully functional Pixelfed instance.</p><p>We recommend your next steps is to <a href="./customize.html">check out how to customize your Pixelfed instance</a></p><div class="tip custom-block"><p class="custom-block-title">If anything was confusing, unclear, or maybe even wrong on this page, then <em>please</em> let us know <a href="https://github.com/pixelfed-glitch/pixelfed/issues/new" target="_blank" rel="noreferrer">by submitting a bug report</a> ❤️</p></div>',38),l=[s];function n(r,c,d,h,p,u){return a(),i("div",null,l)}const m=e(o,[["render",n]]);export{f as __pageData,m as default};
